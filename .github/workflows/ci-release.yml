name: Build

on:
  push:
    branches:
      - develop
      - feature/**
    tags: ['*']

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    outputs:
      full_version: ${{ steps.PrepVersion.outputs.fullSemVer }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.0.x'

      - id: PrepVersion
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.0.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install deps
        run: npm ci

      - name: Build
        env:
          NODE_ENV: production
        run: npm run build

      - name: Upload artifact
        if: ${{ !startsWith(github.ref, 'refs/heads/feature/') }}
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: |
            .output
          retention-days: 2
          include-hidden-files: true

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !startsWith(github.ref, 'refs/heads/feature/') }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Debug context
         run: |
          echo "Ref: ${{ github.ref }}"
          echo "Should run docker: ${{ !startsWith(github.ref, 'refs/heads/feature/') }}"

      - name: Prepare
        id: prep
        run: |
          WEB_DOCKER_IMAGE=ghcr.io/tadam-m/question-book
          VERSION=${{ needs.build.outputs.full_version }}
          WEB_TAGS="${WEB_DOCKER_IMAGE}:${VERSION},${WEB_DOCKER_IMAGE}:sha-${GITHUB_SHA::8},${WEB_DOCKER_IMAGE}:sha-${VERSION::8}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            WEB_TAGS="$WEB_TAGS,${WEB_DOCKER_IMAGE}:${MINOR},${WEB_DOCKER_IMAGE}:${MAJOR},${WEB_DOCKER_IMAGE}:latest"
          fi

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "web_tags=${WEB_TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: .

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            full_version=${{ steps.prep.outputs.version }}
          tags: ${{ steps.prep.outputs.web_tags }}